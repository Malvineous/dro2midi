		******************************
	  	  IMF2MIDI v1.0  (MSDOS only)
	
		converts ADLIB IMF to General Midi
		      by Guenter Nagler 
			    1996
		  (gnagler@ihm.tu-graz.ac.at)
		******************************

[0] FEATURES
    + reads IMF file
    + reads ADLIB instrument templates (register combination) from *.reg
    + guesses intruments 
    + simulates frequences that are not note frequencies using pitchbend wheel
    + maps drums to channel 10 (drums might sound bad because 
      drum sounds are not mapped  to correct drum notes)
    + writes a binary midi file

[1] DESCRIPTION
The program IMF2MIDI tries to convert music files in ADLIB format from games 
like 'Castle Wolfenstein 3D' and 'Blake Stone' (id Software) to midi files.

This is not trivial because ADLIB uses FM synthesis of sounds and is not
compatible to Midi. It uses frequencies and octaves to represent notes
(for many frequencies there is no corresponding midi note number).
The ADLIB sounds are set by program numbers (like in midi). A set of 13 or 
more registers (bytes) build a combination that will represent a sound, 
which could be different ones for low or high octaves.

The IMF file format is very close to ADLIB command syntax, only a 
trivial header and delays between ADLIB commands are specified additional.
See FM.DOC for information on ADLIB commands.
Because its definition is so hardware near it is easy to program a 
player (separate header, delays from commands and send the commands 
after the given pause to the ADLIB I/O port 388/389), but you need
an ADLIB compatible soundcard (like SoundBlaster).

Notes are guessed by storing a table of note frequencies.
The closest frequency will become the note number.
The difference to the next note frequency is simulated by using pitchbend
wheel command which should increase or decrease the note relative to 
frequency distance.
Velocities are computed from current ADLIB volume.

Programs are guessed by storing a table of known register combinations
that build a certain sound (see files *.reg). The format is an Ascii Text
that contains the register values of two ADLIB operators and a GM program
mapping number (Program: 39). Drums are currently stored in files drum*.reg
and are not full supported till now. Channels containing Drums are  mapped
to GM channel 10 leaving notes as are. They should be mapped to 
correct GM Drum Note available (depending on drum sound + frequency + octave).
Before a "key on" command is converted to note on command, the 
current register settings are compared to all registered instruments.
The closest matching combination will be chosen (which could be a mismatch
if no similiar sound is registered).

The program PLAYIMF (which plays an IMF file through ADLIB device)
can help to get new instrument knowledge. The Program assignment must
be done manually:

playimf -c 5 filename.imf > instr.reg

will play only channel 5 (between 0..8) of filename.imf
Hear the sound and find a GM program number that could be similar to the
sound. Edit the file and enter "Program: 101" as first line (where 101
is a program number between 0 and 127).
If it sounds like drums then write it to a new file  like "> drum2.reg" 
and don't set program parameter.

If you have a soundblaster compatible soundcard and an external midi input
(keyboard) then you can try the adlib sound live:

live instr.reg 

and play on your keyboard  (the sound should play through ADLIB)

[2] FILES DESCRIPTION

IMF2MIDI.EXE.........converter program
IMF2MIDI.DOC.........this file, showing usage of IMF2MIDI.EXE
MIDIIO.HPP..........header file for a c++ midi parser
MIDIIO.CPP..........source code for a c++ midi parser
FREQ.HPP............header file for frequency/octave mapping
FREQ.CPP............source code for frequency/octave mapping
IMF2MIDI.CPP.........c++ source code for modifying midi files
IMF2MIDI.MAK.........make file for project
IMF2MIDI.CFG.........compiler options for make
IMF2MIDI.PRJ.........compiler project for Borland (tm) c++ compilers
only IMF2MIDI.EXE is required to run program

[3] COPYRIGHT

IMF2MIDI (c) 1996 was created by Guenter Nagler.

IMF2MIDI is free and may be used as you wish with this one exception:

    You may NOT charge any fee or derive any profit for distribution
    of IMF2MIDI.  Thus, you may NOT sell or bundle IMF2MIDI with any
    product in a retail environment (shareware disk distribution, CD-ROM,
    etc.) without permission of the author.

You may give IMF2MIDI to your friends, upload it to a BBS, or ftp it to
another internet site, as long as you don't charge anything for it.

[4] DISCLAIMER

Use IMF2MIDI at your own risk.  Anything you do with IMF2MIDI is your
responsibility, and not the author's.  Any damage caused to any person,
computer, software, hardware, company, or business by running IMF2MIDI
is your responsibility, and the author will not be liable.

If you don't understand these terms, or are not sure of something, or
are afraid something bad might come of using IMF2MIDI, don't  use  it!
You are here forewarned.

[5] INSTALLATION

[MSDOS]
Simply copy IMF2MIDI.EXE in a directory that is in your path.
When you start the program without arguments 

C:\> IMF2MIDI

you should get the usage text (see next section)

[6] USAGE

imf2midi converts imf format to general midi
usage: imf2midi filename.imf filename.mid
uses instrument definitions from *.reg

[8] SUGGESTIONS / COMMENTS / BUG REPORTS / QUESTIONS

	     WWW:    http://hgiicm.tu-graz.ac.at/Cpub
		contains dos/unix midi programs
	     EMAIL:  gnagler@ihm.tu-graz.ac.at

